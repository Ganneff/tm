# Ganneffs tmux config
# the colors in here DO NEED a 256 colors terminal. I am using
# the rxvt from package rxvt-unicode-256color

# Screen like Ctrl-a for prefix
unbind C-b
set -g prefix ^A
# And pass it through when pressing twice
bind a send-prefix

# Allow ^A^c to create a new window, not just ^Ac
bind ^c new-window -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# last active window
bind-key C-a last-window

# Bind function keys.
# -n means - no need to press ^A first.
bind-key -n C-F1 select-window -t 1
bind-key -n C-F2 select-window -t 2
bind-key -n C-F3 select-window -t 3
bind-key -n C-F4 select-window -t 4
bind-key -n C-F5 select-window -t 5
bind-key -n C-F6 select-window -t 6
bind-key -n C-F7 select-window -t 7
bind-key -n C-F8 select-window -t 8
bind-key -n C-F9 select-window -t 9
bind-key -n C-F10 select-window -t 10
bind-key -n C-F11 select-window -t 11
bind-key -n C-F12 select-window -t 12

# And let Meta-number switch to the pane with that number
# This drops the M-1 .. M-5 keys to switch the layout,
# i just cycle through that with C-a space when I switch them.
bind-key M-1 select-pane -t 1
bind-key M-2 select-pane -t 2
bind-key M-3 select-pane -t 3
bind-key M-4 select-pane -t 4
bind-key M-5 select-pane -t 5
bind-key M-6 select-pane -t 6
bind-key M-7 select-pane -t 7
bind-key M-8 select-pane -t 8
bind-key M-9 select-pane -t 9
bind-key M-0 select-pane -t 10

# vi* style pane movement
bind-key h select-pane -L
bind-key C-h select-pane -L
bind-key j select-pane -D
bind-key C-j select-pane -D
# Already in use for me as kill-window
#bind-key k select-pane -U
#bind-key C-k select-pane -U
bind-key l select-pane -R
bind-key C-l select-pane -R

bind-key -r "<" swap-window -t -1
bind-key -r ">" swap-window -t +1

bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5

bind-key "|" split-window -h -c "#{pane_current_path}"
bind-key "-" split-window -v -c "#{pane_current_path}"

# Toggle activity monitoring
bind-key m setw monitor-activity

# Force a window width/height. Good for stupid things like ilo.
bind-key C-w setw force-width 80
bind-key C-u setw force-width 0
bind-key C-i setw force-height 0
bind-key C-h setw force-height 24

# In "multi-screen" mode, synchronized panes that is, toggle synced input
bind-key C-s setw synchronize-panes

# | and - for pane splitting
unbind-key % # Remove default binding since weâ€™re replacing
bind-key | split-window -h
# of course this looses "delete buffer"
bind-key - split-window -v

# open ssh to somewhere.
bind-key S command-prompt -p "SSH Target: " "new-window -n %1 'exec ssh %1'"

# reload the config
bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded!"

# confirm before killing a window or the server
bind-key k confirm kill-window
#bind-key K confirm kill-server

# open a man page in new window
bind-key / command-prompt "split-window 'exec man %%'"

# Pipe any output in the active pane into a file
bind-key C-p pipe-pane -o 'cat >>~/tmuxoutput.#I-#P'

# Less ugly key for the copy mode
bind-key Escape copy-mode -u

# Start window numbering at 1
set -g base-index 1
# Like base-index, but set the starting index for pane numbers.
set-window-option -g pane-base-index 1

# No delay in command sequences
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Activity monitoring
#setw -g monitor-activity on
#set -g visual-activity on

# Some default options

# Show or hide the status line.
set -g status on
# Update the status bar every interval seconds.  By default, updates
# will occur every 15 seconds.  A setting of zero disables redrawing at
# interval.
set -g status-interval 1

#### COLOUR (Solarized 256)

# default statusbar colors
set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour244 #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg colour166 #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01

# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour colour64 #green

# Display string to the left of the status bar.  string will be passed
# through strftime(3) before being used.  By default, the session name
# is shown. string may contain any of the following special character
# sequences:
#
#       Character pair    Replaced with
#       #(shell-command)  First line of the command's
#                         output
#       #[attributes]     Colour or attribute change
#       #H                Hostname of local host
#       #h                Hostname of local host without
#                         the domain name
#       #F                Current window flag
#       #I                Current window index
#       #P                Current pane index
#       #S                Session name
#       #T                Current window title
#       #W                Current window name
#       ##                A literal `#'
#
# The #(shell-command) form executes `shell-command' and
# inserts the first line of its output.  Note that shell
# commands are only executed once at the interval specified
# by the status-interval option: if the status line is
# redrawn in the meantime, the previous result is used.
# Shell commands are executed with the tmux global
# environment set.
#
# The window title (#T) is the title set by the program
# running within the window using the OSC title setting
# sequence, for example:
#
#       $ printf '\033]2;My Title\033\\'
#
# When a window is first created, its title is the
# hostname.
#
# #[attributes] allows a comma-separated list of attributes
# to be specified, these may be `fg=colour' to set the
# foreground colour, `bg=colour' to set the background
# colour, the name of one of the attributes (listed under
# the message-attr option) to turn an attribute on, or an
# attribute prefixed with `no' to turn one off, for example
# nobright.  Examples are:
#
#       #(sysctl vm.loadavg)
#       #[fg=yellow,bold]#(apm -l)%%#[default] [#S]
#
# Where appropriate, special character sequences may be
# prefixed with a number to specify the maximum length, for
# example `#24T'.
#
# By default, UTF-8 in string is not interpreted, to enable
# UTF-8, use the status-utf8 option.
#set -g status-left ""
#set -g status-right "#(uptime|awk '{print $11}')"

#set -g status-right "#[fg=green,bold]%H:%M:%S" # %d-%b-%y
set -g status-left '#[fg=colour14,bold]%d-%m-%y %H:%M:%S'
set -g status-left-length 42
set -g status-right '#[fg=colour143,bold]#(cut -d " " -f 1-4 /proc/loadavg)#[default] #[default] #[fg=green,bold]#H#[default]'
set -g status-right-length 52

# Enable utf8
set -g utf8 on

# Instruct tmux to treat top-bit-set characters in the status-left and
# status-right strings as UTF-8; notably, this is important for wide
# characters.  This option defaults to off.
set -g status-utf8 on

set-window-option -g window-status-format '#P###I:#W#F'
set-window-option -g window-status-current-format '#P###I:#W#F'

# Monitor for activity in the window.  Windows with activity are
# highlighted in the status line.
#set-window-option -g monitor-activity on

# Set the amount of time for which status line messages and other on-screen
# indicators are displayed.  time is in milliseconds.
set -g display-time 3000

# We like zsh
set -g default-command zsh

# Set the number of error or information messages to save in the message
# log for each client.  The default is 20.
set -g message-limit 100

# If on, ring the terminal bell when an activity, content or silence alert occurs.
set -g bell-on-alert on
# listen for activity on all windows
set -g bell-action any

# Set the maximum number of lines held in window history.
# This setting applies only to new windows - existing window
# histories are not resized and retain the limit at the point
# they were created.
set -g history-limit 100000

# If on, tmux captures the mouse and allows panes to be resized by
# dragging on their borders.
# Kills selection, so turned off.
set -g mouse-resize-pane off
